import telebot
import json
import random
import os
import time

token = "5950485062:AAHk11VIaP2FRIRJuIFcsaXHWyNrxzI5kuk"

bot = telebot.TeleBot(token)

keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
keyboard2 = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

button1 = telebot.types.KeyboardButton("–ü–æ—á–∞—Ç–∏")
button2 = telebot.types.KeyboardButton("–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—èüòä")
button3 = telebot.types.KeyboardButton("–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å")
button4 = telebot.types.KeyboardButton("–ü—Ä–æ—â–∞–Ω–Ω—èüò¢")
button5 = telebot.types.KeyboardButton("–Ü–≥—Ä–∏üéÆ")
keyboard.add(button1)
keyboard2.add(button2,button3,button4,button5)

reply_keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
btn1 = telebot.types.KeyboardButton("1Ô∏è‚É£–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ")
btn2 = telebot.types.KeyboardButton("ü™®‚úÇÔ∏èüìÑ–ö–∞–º—ñ–Ω—å –Ω–æ–∂–∏—Ü—ñ –ø–∞–ø—ñ—Ä")
btn3 = telebot.types.KeyboardButton("‚ùå‚≠ïÔ∏è–•—Ä–µ—Å—Ç–∏–∫–∏ –Ω—É–ª–∏–∫–∏")
reply_keyboard.add(btn1, btn2, btn3)

inline_keyboard = telebot.types.InlineKeyboardMarkup()
inl1 = telebot.types.InlineKeyboardButton("ü™®", callback_data = "Stone")
inl2 = telebot.types.InlineKeyboardButton("‚úÇÔ∏è", callback_data = "Scissor")
inl3 = telebot.types.InlineKeyboardButton("üìÑ", callback_data = "Paper")
inline_keyboard.add(inl1, inl2, inl3)


@bot.message_handler(commands=["start"])
def start2(message):
    bot.send_message(message.chat.id, "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É '–ü–æ—á–∞—Ç–∏'", reply_markup=keyboard)
    bot.register_next_step_handler(message, start)
    

def start(message):

    user_dict = {
        "–Ü–º'—è": "" ,
        "–ü—Ä—ñ–∑–≤–∏—â–µ": "",
        "–í—ñ–∫": "",
        "–ü–æ—à—Ç–∞": "",
        "–¢–µ–ª–µ—Ñ–æ–Ω": "",
        
    }

    def get_name(user_name):
        user_dict["–Ü–º'—è"] = user_name.text
        user_age = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –±—É–¥—å-–ª–∞—Å–∫–∞ –≤—ñ–∫: ")
        bot.register_next_step_handler(user_age, get_age)

    def get_surname(user_sername):
        user_dict["–ü—Ä—ñ–∑–≤–∏—â–µ"] = user_sername.text
        user_email = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –µ–ª–µ–∫—Ç—Ä–æ–Ω—É –ø–æ—à—Ç—É:")
        bot.register_next_step_handler(user_email, get_email)

    def get_email(user_email):
        user_dict["–ü–æ—à—Ç–∞"] = user_email.text
        user_phone = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")
        bot.register_next_step_handler(user_phone, get_phone)

    def get_phone(user_phone):
        user_dict["–¢–µ–ª–µ—Ñ–æ–Ω"] = user_phone.text
        bot.send_message(message.chat.id, "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∑–∞–∫—ñ–Ω—á–µ–Ω–æ:)")
        print(user_dict)
        
        file_name = "json_my_bot\\" + str(message.chat.id) + '.json'
        with open(file_name,"w", encoding="utf-8") as file:
            json.dump(user_dict, file, ensure_ascii=False)

        bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –±–æ—Ç–æ–º.", reply_markup=keyboard2)


    def get_age(user_age):
        user_dict["–í—ñ–∫"] = user_age.text
        try:
            a = int(user_age.text)
            user_surname = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ:")
            bot.register_next_step_handler(user_surname, get_surname)
        except:
            answer_age = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ :(")
            bot.register_next_step_handler(answer_age, get_age)
    
    
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç, –ø—Ä–æ–π–¥–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é!",reply_markup = telebot.types.ReplyKeyboardRemove())
    user_name = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è:")
    bot.register_next_step_handler(user_name, get_name)


@bot.message_handler(content_types=["text"])

def send_text(message):
    
    user_say = message.text.lower()

    if user_say == "—Å–∫–∏–Ω—å —Ñ–æ—Ç–∫—É":
        picture1 = open("photo//R.jpg", "rb")
        bot.send_photo(message.chat.id, picture1, "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –∫—Ä–∞—Å–∞üòç")
        picture1.close()
    elif user_say == "—Å–∫–∏–Ω—å —â–µ":
        picture2 = open("photo//OIP.jpg", "rb")
        bot.send_photo(message.chat.id, picture2, "–û–∑–µ—Ä–æ –£–∫—Ä–∞—ó–Ω–∏ –°–∏–Ω–µ–≤–∏—ÄüñºÔ∏è")
        picture2.close()
    elif user_say == "–ø–æ–∫–∞–∂–∏ –±—ñ–ª—å—à–µ":
        picture3 = open("photo//mountain.jpg", "rb")
        bot.send_photo(message.chat.id, picture3, "–ê —Ü–µ –≥–æ—Ä–∏ –£–∫—Ä–∞—ó–Ω–∏‚õ∞Ô∏è")
        picture3.close()

        picture4 = open("photo//field.jpg", "rb")
        bot.send_photo(message.chat.id, picture4, "–ü–æ–ª–µüòö")
        picture4.close()
    elif user_say == "–∫—Ä—É—Ç–æ":
        picture5 = open("photo//holy.jpg", "rb")
        bot.send_photo(message.chat.id, picture5, "–Ü –Ω–∞ –æ—Å—Ç–∞–Ω–æ–∫ - –ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π –±–æ—Ç–∞–Ω—ñ—á–Ω–∏–π —Å–∞–¥ —ñ–º–µ–Ω—ñ –ú–∏–∫–æ–ª–∏ –ì—Ä–∏—à–∫–∞ –ù–ê–ù –£–∫—Ä–∞—ó–Ω–∏")
        picture5.close()
    

    if user_say == "—ñ–≥—Ä–∏üéÆ":
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –≥—Ä—É!", reply_markup = reply_keyboard)
    elif message.text == "1Ô∏è‚É£–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ":
        bot.send_message(message.chat.id, "–í–∏ –æ–±—Ä–∞–ª–∏ –≥—Ä—É –í–≥–∞–¥–∞–π —á–∏—Å–ª–æ", reply_markup = telebot.types.ReplyKeyboardRemove())

        game_num = random.randint(1,100)
        print(game_num)
        tries = 0        

        def guess_number(res, tries):
            tries += 1
            if str(game_num) == res.text:
                bot.send_message(message.chat.id, "–í–∏ –≤–≥–∞–¥–∞–ª–∏! –û–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—É –≥—Ä—É:", reply_markup = reply_keyboard)
                #-----------------------------------------
                id_str = str(message.chat.id)
                game_directory = "games_history/dir_" + id_str

                if os.path.exists(game_directory) == False:
                    os.mkdir(game_directory)
                    
                files = os.listdir(game_directory)
                files.sort()
                if len(files) == 0:
                    game_number = "1"
                else:
                    last_file_name = files[-1]
                    game_number = str(int(last_file_name.split(".")[0])+1)
                
                game_session = {
                    "name": "guess_number",
                    "time": time.time(),
                    "answer": game_num,
                    "tries": tries
                }
                with open(game_directory+"/"+game_number+'.json', "w") as file:
                    json.dump(game_session, file)
                #-----------------------------------------
            else:                
                if game_num > int(res.text):
                    reset = bot.send_message(message.chat.id, "–í–∏ –Ω–µ –≤–≥–∞–¥–∞–ª–∏. –ó–∞–≥–∞–¥–∞–Ω–µ —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:")
                if game_num < int(res.text):
                    reset = bot.send_message(message.chat.id, "–í–∏ –Ω–µ –≤–≥–∞–¥–∞–ª–∏. –ó–∞–≥–∞–¥–∞–Ω–µ —á–∏—Å–ª–æ –º–µ–Ω—à–µ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:")
                bot.register_next_step_handler(reset, guess_number, tries)
        
        res = bot.send_message(message.chat.id, "–ß–∏—Å–ª–æ —Å–≥–µ–Ω–µ—Ä–æ–≤–æ–Ω–æ! –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ:")
        bot.register_next_step_handler(res, guess_number, tries)
  
    elif message.text == "ü™®‚úÇÔ∏èüìÑ–ö–∞–º—ñ–Ω—å –Ω–æ–∂–∏—Ü—ñ –ø–∞–ø—ñ—Ä":
        bot.send_message(message.chat.id, "–í–∏ –æ–±—Ä–∞–ª–∏ –≥—Ä—É –ö–∞–º—ñ–Ω—å –Ω–æ–∂–∏—Ü—ñ –ø–∞–ø—ñ—Ä")
        result_2 = bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —Å–∏–º–≤–æ–ª:", reply_markup = inline_keyboard)
        
    
    elif message.text == "‚ùå‚≠ïÔ∏è–•—Ä–µ—Å—Ç–∏–∫–∏ –Ω—É–ª–∏–∫–∏":
        bot.send_message(message.chat.id, "–í–∏ –æ–±—Ä–∞–ª–∏ –≥—Ä—É –•—Ä–µ—Å—Ç–∏–∫–∏ –Ω—É–ª–∏–∫–∏")

    if user_say == "–º—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å":
        try:
            with open("json_my_bot\\"+ str(message.chat.id)+".json", "r", encoding="utf-8") as f:
                user_dict = json.load(f)
                text = ""
                for i in user_dict:
                    text += i + ": " + user_dict[i] + ";\n"
                bot.send_message(message.chat.id, text)
        except:
            bot.send_message(message.chat.id, "Error")
        

    if user_say == "–ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—èüòä":
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç")
    if user_say == "–ø—Ä–æ—â–∞–Ω–Ω—èüò¢":
        bot.send_message(message.chat.id, "–ë—É–≤–∞–π, –º–µ–Ω—ñ –ø—Ä–∏—î–º–Ω–æ –±—É–ª–æ –∑ —Ç–æ–±–æ—é —Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è)")

    if user_say in ["–ø—Ä–∏–≤–µ—Ç" , "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å" , "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ" ,"—Ö–∞—é—à–∫–∏" , "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "–∑–¥–æ—Ä–æ–≤–∞", "–ø—Ä–∏–≤–µ—Ç–∏–∫"]:
        bot.send_message(message.chat.id, "–Ø –Ω–µ —Ä–æ–∑—É–º—ñ—éüôÑ, –ø—Ä–æ–¥–æ–≤–∂—ñ—Ç—å –£–ö–†–ê–á–ù–°–¨–ö–û–Æüòäüá∫üá¶")
    if user_say in ["–ø—Ä–∏–≤—ñ—Ç" , "hi" , ")" ,"hello" , "–¥–æ–±—Ä–∏–π –¥–µ–Ω—å", "–∑–¥–æ—Ä–æ–≤", "–∫—É"]:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç")
    if user_say in ["—è–∫ —Å–ø—Ä–∞–≤–∏?" , "—è–∫ —Å—è–º–∞—î—à?" ,"—è–∫ —Å–ø—Ä–∞–≤–∏" , "—è–∫ —Å—è–º–∞—î—à" ,"how are you?" ,"how are you"]:
        bot.send_message(message.chat.id, "–£ –º–µ–Ω–µ –≤—Å–µ –¥–æ–±—Ä–µ:) ")
        bot.send_message(message.chat.id, "–ê —è–∫ —É —Ç–µ–±–µ? ")
    if user_say in ["–≤—Å–µ –¥–æ–±—Ä–µ" ,"–≤—Å–µ –æ–∫" , "–Ω–æ—Ä–º–∞–ª—å–Ω–æ" ,"–¥–æ–±—Ä–µ" , "–∫–ª–∞—Å" ,"—á—É–¥–æ–≤–æ", "–æ–∫", "–Ω–æ—Ä–º"]:
        bot.send_message(message.chat.id, "–ß—É–¥–æ–≤–æ, —è —Ä–∞–¥–∏–π –∑–∞ —Ç–µ–±–µ:)")
    if user_say in ["–±—É–≤–∞–π" , "–¥–æ –∑—É—Å—Ç—Ä—ñ—á—ñ" ,"–ø—Ä–æ—â–∞–≤–∞–π","goodbye" , "bye"]:
        bot.send_message(message.chat.id, "–ë—É–≤–∞–π, –º–µ–Ω—ñ –ø—Ä–∏—î–º–Ω–æ –±—É–ª–æ –∑ —Ç–æ–±–æ—é —Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è)")
    if  user_say == "cookie":
        pass

@bot.callback_query_handler(func = lambda call: True)
def get_call(call):
    call_list = ["Stone","Scissor","Paper"]
    rand_choice = random.choice(call_list)
    amount_victory = 0
    loss_amount = 0

    if call.data != rand_choice:
        if call.data == "Stone" and rand_choice == "Scissor":
            bot.send_message(call.message.chat.id, "–í–∞—à –≤–∏–±—ñ—Ä –∫–∞–º—ñ–Ω—å")
            bot.send_message(call.message.chat.id, "–í–∏–±—ñ—Ä –±–æ—Ç—É –Ω–æ–∂–∏—Ü—ñ")
            bot.send_message(call.message.chat.id, "–í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏! –û–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—É –≥—Ä—É", reply_markup = reply_keyboard)
            amount_victory += 1
            print("–ü–æ–±–µ–¥–∞")
        elif call.data =="Stone" and rand_choice == "Paper":
            bot.send_message(call.message.chat.id, "–í–∞—à –≤–∏–±—ñ—Ä –∫–∞–º—ñ–Ω—å")
            bot.send_message(call.message.chat.id, "–í–∏–±—ñ—Ä –±–æ—Ç—É –ø–∞–ø—ñ—Ä")
            bot.send_message(call.message.chat.id, "–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑", reply_markup = inline_keyboard)
            loss_amount += 1
            print("–ü–æ—Ä–∞–∂–µ–Ω–∏–µ")        
        if call.data =="Scissor" and rand_choice == "Paper":
            bot.send_message(call.message.chat.id, "–í–∞—à –≤–∏–±—ñ—Ä –Ω–æ–∂–∏—Ü—ñ")
            bot.send_message(call.message.chat.id, "–í–∏–±—ñ—Ä –±–æ—Ç—É –ø–∞–ø—ñ—Ä")
            bot.send_message(call.message.chat.id, "–í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏! –û–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—É –≥—Ä—É", reply_markup = reply_keyboard)
            amount_victory += 1
            print("–ü–æ–±–µ–¥–∞")
        elif call.data =="Scissor" and rand_choice == "Stone":
            bot.send_message(call.message.chat.id, "–í–∞—à –≤–∏–±—ñ—Ä –Ω–æ–∂–∏—Ü—ñ")
            bot.send_message(call.message.chat.id, "–í–∏–±—ñ—Ä –±–æ—Ç—É –∫–∞–º—ñ–Ω—å")
            bot.send_message(call.message.chat.id, "–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑", reply_markup = inline_keyboard)
            loss_amount += 1
            print("–ü–æ—Ä–∞–∂–µ–Ω–∏–µ")
        if call.data =="Paper" and rand_choice == "Stone":
            bot.send_message(call.message.chat.id, "–í–∞—à –≤–∏–±—ñ—Ä –ø–∞–ø—ñ—Ä")
            bot.send_message(call.message.chat.id, "–í–∏–±—ñ—Ä –±–æ—Ç—É –∫–∞–º—ñ–Ω—å")
            bot.send_message(call.message.chat.id, "–í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏! –û–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—É –≥—Ä—É", reply_markup = reply_keyboard)
            amount_victory += 1
            print("–ü–æ–±–µ–¥–∞")
        elif call.data =="Paper" and rand_choice == "Scissor":
            bot.send_message(call.message.chat.id, "–í–∞—à –≤–∏–±—ñ—Ä –ø–∞–ø—ñ—Ä")
            bot.send_message(call.message.chat.id, "–í–∏–±—ñ—Ä –±–æ—Ç—É –Ω–æ–∂–∏—Ü—ñ")
            bot.send_message(call.message.chat.id, "–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑", reply_markup = inline_keyboard)
            loss_amount += 1
            print("–ü–æ—Ä–∞–∂–µ–Ω–∏–µ")
    else:
        bot.send_message(call.message.chat.id, "–ù—ñ—Ö—Ç–æ –Ω–µ –ø–µ—Ä–µ–º—ñ–≥! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑", reply_markup = inline_keyboard)
        print("–ù–∏—á—å—è")
        loss_amount += 1

    if call.data == "Stone" and rand_choice == "Scissor" or call.data =="Scissor" and rand_choice == "Paper" or call.data =="Paper" and rand_choice == "Stone":
        id_str = str(call.message.chat.id)
        game_directory = "games_history/dir_" + id_str

        if os.path.exists(game_directory) == False:
            os.mkdir(game_directory)
                        
        files = os.listdir(game_directory)
        files.sort()
        if len(files) == 0:
            game_number = "1"
        else:
            last_file_name = files[-1]
            game_number = str(int(last_file_name.split(".")[0])+1)
                    
            game_session2 = {
                "name": "crosses zeros",
                "time": time.time(),
                "amount_victory": amount_victory,
                "loss_amount": loss_amount
            }
        with open(game_directory+"/"+game_number+'.json', "w") as file:
            json.dump(game_session2, file)

bot.infinity_polling()